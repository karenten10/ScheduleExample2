@page "/"

@using Syncfusion.Blazor.Schedule

@*<SfSchedule TValue="object"></SfSchedule>*@

<SfSchedule TValue=AppointmentData Height="650px" @bind-SelectedDate="@CurrentDate" @bind-CurrentView="@CurrentView">
    <ScheduleEventSettings DataSource="@DataSource"></ScheduleEventSettings>
    <ScheduleViews>
        <ScheduleView Option="View.Day"></ScheduleView>
        <ScheduleView Option="View.Week" StartHour="07:00" EndHour="15:00"></ScheduleView>
        <ScheduleView Option="View.WorkWeek" StartHour="10:00" EndHour="18:00"></ScheduleView>
        <ScheduleView Option="View.Month" MaxEventsPerRow="2" ShowWeekend="false"></ScheduleView>
        <ScheduleView Option="View.Agenda"></ScheduleView>
    </ScheduleViews>
</SfSchedule>
@code 
{
    View CurrentView = View.Month;
    DateTime CurrentDate = DateTime.Now;
    List<AppointmentData> DataSource = new List<AppointmentData>
    {
        new AppointmentData { Id = 1, Subject = "Paris", StartTime = new DateTime(2022, 2, 13, 10, 0, 0) , EndTime = new DateTime(2022, 2, 13, 12, 0, 0) },
        new AppointmentData { Id = 2, Subject = "Germany", StartTime = new DateTime(2022, 2, 15, 10, 0, 0) , EndTime = new DateTime(2022, 2, 15, 12, 0, 0) },
        new AppointmentData { Id = 2, Subject = "Taiwan", StartTime = new DateTime(2022, 2, 16, 10, 0, 0) , EndTime = new DateTime(2022, 2, 16, 12, 0, 0) },
        new AppointmentData { Id = 2, Subject = "Kaohsiung", StartTime = new DateTime(2022, 2, 17, 10, 0, 0) , EndTime = new DateTime(2022, 2, 17, 12, 0, 0) }
    };

    public class AppointmentData
    {
        public int Id { get; set; }
        public string Subject { get; set; }
        public string Location { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
        public string Description { get; set; }
        public bool IsAllDay { get; set; }
        public string RecurrenceRule { get; set; }
        public string RecurrenceException { get; set; }
        public Nullable<int> RecurrenceID { get; set; }
    }
}
